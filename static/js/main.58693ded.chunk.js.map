{"version":3,"sources":["components/CellDropTarget.js","components/Cell.js","components/Player.js","components/Item.js","components/Board.js","components/Dashboard.js","components/Controls.js","components/Game.js","App.js","index.js"],"names":["CellDropTarget","_ref","row","col","dropTargets","movePlayer","children","_useDrop","useDrop","accept","map","playerNum","concat","drop","item","monitor","getItemType","collect","isOver","canDrop","_useDrop2","_slicedToArray","_useDrop2$","React","createElement","className","ref","Cell","visionAdj","length","Player","number","_useDrag","useDrag","type","drag","Item","display","style","backgroundColor","Board","board","playerPositions","numRows","numCols","DndProvider","backend","HTML5Backend","gridTemplateRows","gridTemplateColumns","cells","_loop","r","_loop2","c","findIndex","position","moveAdj","positions","Math","abs","reduce","acc","val","index","some","arr","max","apply","_toConsumableArray","push","key","generateCells","Dashboard","round","goal","bag","itemNames","textColor","i","itemName","Controls","collectItem","onClick","Game","setup","_useState","useState","_useState2","setBoard","_useState3","_useState4","setBag","_useState5","_useState6","setRound","_useState7","coord","_useState8","playersHistory","setPlayersHistory","getPlayerPositions","console","log","playerHistory","itemType","parseInt","slice","copyPlayersHistory","pRow","pCol","currItem","copyBoard","copyBag","filter","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.58693ded.chunk.js","sourcesContent":["import React from 'react';\nimport { useDrop } from 'react-dnd';\n\nexport function CellDropTarget({ row, col, dropTargets, movePlayer, children }) {\n  const [{ isOver, canDrop }, drop] = useDrop(\n    () => ({\n      accept: dropTargets.map(playerNum => `p${playerNum}`),\n      drop: (item, monitor) => movePlayer(monitor.getItemType(), row, col),\n      collect: (monitor) => ({\n        isOver: !!monitor.isOver(),\n        canDrop: !!monitor.canDrop()\n      })\n    }),\n    []\n  );\n\n  return (\n    <div\n      className='cellDropTarget'\n      ref={drop}\n    >\n      {canDrop && !isOver && <div className='highlightPossible' />}\n      {canDrop && isOver && <div className='highlightHover' />}\n      {children}\n    </div>\n  )\n}","import React from 'react';\n\nimport { CellDropTarget } from './CellDropTarget';\n\nexport function Cell({ row, col, movePlayer, dropTargets, visionAdj, children }) {\n  if (!visionAdj) {\n    return (\n      <div className='cell invis' />\n    )\n  }\n\n  return (\n    dropTargets.length === 0 ?\n    <div\n      className='cell'\n    >\n      {children}\n    </div> :\n    <CellDropTarget row={row} col={col} dropTargets={dropTargets} movePlayer={movePlayer}>\n      <div className='cell'>\n        {children}\n      </div>\n    </CellDropTarget>\n  );\n}","import React from \"react\";\nimport { useDrag } from 'react-dnd';\n\nexport function Player({ number }) {\n  const [, drag] = useDrag(() => ({\n    type: `p${number}`,\n  }))\n\n  return (\n    <div className='target' ref={drag}>\n      <h1 className='player'>\n        {`P${number}`}\n      </h1>\n    </div>\n  );\n}","import React from \"react\";\n\nexport function Item({ type, display = 'center' }) {\n  const colors = ['pink', 'red', 'blue'];\n\n  return (\n    <div className='item' style={{backgroundColor: colors[type]}} />\n  );\n}","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport { Cell } from './Cell';\nimport { Player } from './Player';\nimport { Item } from './Item';\n\nexport function Board({ board, playerPositions, movePlayer }) {\n  const numRows = board.length;\n  const numCols = board[0].length;\n\n  const generateCells = (numRows, numCols, playerPositions) => {\n    const cells = [];\n    for (let r = 0; r < numRows; r++) {\n      for (let c = 0; c < numCols; c++) {\n        const playerNum = playerPositions.findIndex(position => r === position[0] && c === position[1]);\n        const maxAbsVal = arr => Math.max(...arr.map(Math.abs))\n        const moveAdj = playerPositions.map(\n          positions => Math.abs(positions[0] - r) + Math.abs(positions[1] - c) === 1\n        ).reduce((acc, val, index) => val ? acc.concat([index + 1]) : acc, []);\n        const visionAdj = playerPositions.some(\n          positions => maxAbsVal([positions[0] - r, positions[1] - c]) <= 1\n        )\n\n        cells.push(\n          <Cell\n            key={`${r} ${c}`}\n            row={r} col={c}\n            movePlayer={movePlayer}\n            dropTargets={moveAdj}\n            visionAdj={visionAdj}\n          >\n            {playerNum === -1 ? null : <Player number={playerNum + 1} />}\n            {board[r][c] === 0 ? null : <Item type={board[r][c] - 1} />}\n          </Cell>\n        );\n      }\n    }\n\n    return cells;\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className='board' style={{gridTemplateRows: `repeat(${numRows}, 1fr)`, gridTemplateColumns: `repeat(${numCols}, 1fr)`}}>\n        {generateCells(numRows, numCols, playerPositions)}\n      </div>\n    </DndProvider>\n  );\n}","import React from 'react';\n\nexport function Dashboard({ round, goal, bag }) {\n  const itemNames = ['pink', 'red', 'blue'];\n\n  const textColor = (i) =>{\n    if (bag[i] >= goal[i]) {\n      return 'listItemComplete'\n    }\n    return 'listItem'\n  }\n\n  return (\n    <div className='dashboard'>\n      <h1 className='roundTitle'>{`Round ${round + 1}`}</h1>\n      <div className='tasks'>\n        <h2><u>Task Checklist</u></h2>\n        {itemNames.map((itemName, i) => (<p key={i} className={textColor(i)}>{`${goal[i]} ${itemNames[i]}`}</p>))}\n      </div>\n      <div className='bag'>\n        <h2><u>Bag</u></h2>\n        {itemNames.map((itemName, i) => (<p key={i} className='listItem'>{`${bag[i]} ${itemNames[i]}`}</p>))}\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport function Controls({collectItem}) {\n  return (\n    <div className='controls'>\n      <div className='controlButton' onClick={collectItem}>\n        <h3>Collect</h3>\n      </div>\n      <div className='controlButton'>\n        <h3>Lock In</h3>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react';\n\nimport { Board } from './Board';\nimport { Dashboard } from './Dashboard';\nimport { Controls } from './Controls';\n\nexport function Game({ setup }) {\n  const [board, setBoard] = useState(setup.board);\n  const [bag, setBag] = useState(setup.goal.map(() => 0));\n  const [round, setRound] = useState(0);\n  const [playersHistory, setPlayersHistory] = useState(setup.playerPositions.map(position => [position.map(coord => coord)]));\n\n  const getPlayerPositions = (playersHistory) => {\n    console.log(playersHistory);\n    return playersHistory.map(playerHistory => playerHistory[playerHistory.length - 1])\n  }\n\n  const movePlayer = (itemType, row, col) => {\n    const updatePlayersHistory = playersHistory => {\n      const playerNum = parseInt(itemType.slice(-1));\n      const copyPlayersHistory = playersHistory.map(\n        playerHistory => playerHistory.map(position => position.map(coord => coord))\n      );\n      copyPlayersHistory[playerNum - 1].push([row, col]);\n      return copyPlayersHistory;\n    }\n\n    setPlayersHistory(updatePlayersHistory);\n    setRound(round => round + 1);\n  }\n\n  const collectItem = () => {\n    const playerPositions = getPlayerPositions(playersHistory);\n    const pRow = playerPositions[0][0];\n    const pCol = playerPositions[0][1];\n    const currItem = board[pRow][pCol] - 1;\n\n    if (currItem !== -1) {\n      const updateBoard = board => {\n        const copyBoard = board.map(row => row.map(col => col));\n        copyBoard[pRow][pCol] = 0;\n        return copyBoard;\n      }\n      const updateBag = bag => {\n        const copyBag = bag.filter(() => true);\n        copyBag[currItem] += 1;\n        return copyBag\n      }\n  \n      setBoard(updateBoard);\n      setBag(updateBag);\n      setRound(round => round + 1);\n    }\n  }\n\n  return (\n    <div className='game'>\n      <h1>Maze Game</h1>\n      <div className='gameBoard'>\n        <Board\n          board={board}\n          playerPositions={getPlayerPositions(playersHistory)}\n          movePlayer={(itemType, row, col) => movePlayer(itemType, row, col)}\n        />\n        <Dashboard round={round} goal={setup.goal} bag={bag} />\n      </div>\n      <Controls collectItem={collectItem}/>\n    </div>\n  )\n}","import './App.css';\nimport React from 'react';\nimport { Game } from './components/Game'\n\nfunction App() {\n  const setups = [\n    {\n      goal: [7, 3, 5],\n      board: [\n        [2, 0, 3, 1, 1, 0],\n        [2, 3, 0, 1, 1, 1],\n        [3, 0, 3, 1, 1, 1],\n        [1, 1, 1, 3, 0, 3],\n        [1, 1, 1, 0, 0, 2],\n        [0, 1, 1, 3, 2, 2],\n      ],\n      playerPositions: [[5, 0]]\n    }\n  ]\n\n  return (\n    <Game setup={setups[0]}/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}